---

- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - "defaults.yml"
    - "environments/{{ stack_name }}.yml"
  vars:
    key_name: "{{ stack_name }}-fxadev"
  tasks:
    - name: create key pair
      local_action:
        module: ec2_key
        name: "{{ key_name }}"
        region: "{{ region }}"
        key_material: "{{ item }}"
      with_file: ~/.ssh/id_rsa.pub

    - name: create basic stack (this will take a while)
      action: cloudformation
        stack_name="{{ stack_name }}-fxadev"
        state=present
        region="{{ region }}"
        template=cloudformation/moz-single.json
      args:
        template_parameters:
          KeyName: "{{ key_name }}"
          HostedZone: "{{ hosted_zone }}"
          Subdomain: "{{ subdomain }}"
          SSLCertificateName: "{{ ssl_certificate_name }}"
          CDNSSLCertificateId: "{{ cdn_ssl_certificate_id }}"
          RDSPassword: "{{ rds_password }}"
          EC2InstanceType: "{{ ec2_instance_type }}"
          EC2VolumeSize: "{{ ec2_volume_size }}"
        tags:
          Owner: "{{ owner | default('nobody@mozilla.com') }}"
          REAPER_SPARE_ME: "{{ reaper_spare_me | default('false') }}"
      register: stack

    - debug: var=stack

    - name: add new host
      add_host: hostname={{ stack['stack_outputs']['Instance'] }} groupname=whatevs

- name: Configure instance
  hosts: whatevs
  remote_user: ec2-user
  gather_facts: true
  vars:
    rds_host: "{{ hostvars['localhost']['stack']['stack_outputs']['RDSEndpoint'] }}"
    auth_sns_arn: "{{ hostvars['localhost']['stack']['stack_outputs']['SNS'] }}"
    basket_queue_url: "{{ hostvars['localhost']['stack']['stack_outputs']['BasketAccountChangeQueueURL'] }}"
    oauth_queue_url: "{{ hostvars['localhost']['stack']['stack_outputs']['OAuthAccountChangeQueueURL'] }}"
    profile_queue_url: "{{ hostvars['localhost']['stack']['stack_outputs']['ProfileAccountChangeQueueURL'] }}"
    content_static_resource_url: "https://{{ hostvars['localhost']['stack']['stack_outputs']['StaticResourceHost'] }}"
    authdb_primary_host: "{{ rds_host }}"
    authdb_primary_password: "{{ rds_password }}"
    authdb_replica_host: "{{ rds_host }}"
    authdb_replica_password: "{{ rds_password }}"
    oauth_db_host: "{{ rds_host }}"
    oauth_db_password: "{{ rds_password }}"
    profile_db_host: "{{ rds_host }}"
    profile_db_password: "{{ rds_password }}"
    sync_db_host: "{{ rds_host }}"
    sync_db_password: "{{ rds_password }}"
  vars_files:
    - "environments/{{ stack_name }}.yml"
  roles:
    - ses
    - memcached
    - datadog
    - auth
    - authdb
    - content
    - basket-proxy
    - oauth
    - oauth-console
    - profile
    - kv
    - sync
    - rp
    - rp-untrusted
    - able
    - log
    - cron_update
    - team
